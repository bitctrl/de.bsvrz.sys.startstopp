<?xml version="1.0" encoding="ISO-8859-1"?>

<project name="de.bsvrz.pat.onlprot" default="zip" basedir=".">

    <description><![CDATA[
        Ant-Build-Datei f¸r das Distributionspaket de.bsvrz.pat.onlprot

        Copyright 2015 Kappich Systemberatung, http://www.kappich.de
        		
		This file is part of de.bsvrz.pat.onlprot.
		
		de.bsvrz.pat.onlprot is free software: you can redistribute it and/or modify
		it under the terms of the GNU General Public License as published by
		the Free Software Foundation, either version 3 of the License, or
		(at your option) any later version.
		
		de.bsvrz.pat.onlprot is distributed in the hope that it will be useful,
		but WITHOUT ANY WARRANTY; without even the implied warranty of
		MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		GNU General Public License for more details.
		
		You should have received a copy of the GNU General Public License
		along with de.bsvrz.pat.onlprot.  If not, see <http://www.gnu.org/licenses/>.

		Contact Information:
		Kappich Systemberatung
		Martin-Luther-Straﬂe 14
		52062 Aachen, Germany
		phone: +49 241 4090 436 
		mail: <info@kappich.de>

        
    ]]></description>

    <tstamp>
        <format property="compile.time" pattern="dd.MM.yyyy HH:mm:ss" />
    </tstamp>

    <tstamp>
        <format property="build.datetime" pattern="yyyyMMdd-HHmm" />
    </tstamp>

    <property name="release" value="Kernsoftware 3.9.2" />

    <property name="version" value="3.9.2" />

    <property name="license.name" value="GPL" />

    <property name="revision" value="866ec7f8528df5f1c8965c1d289385ec3737472a" />

    <property name="depends.on.compiled.packages" value="de.bsvrz.dav.daf, de.bsvrz.sys.funclib.dataSerializer, de.bsvrz.sys.funclib.communicationStreams, de.bsvrz.sys.funclib.configObjectAcquisition, de.bsvrz.sys.funclib.debug, de.bsvrz.sys.funclib.commandLineArgs" />

    <property name="depends.on.lib.jars" value="" />

    <property name="compile.classpath" value="../de.bsvrz.dav.daf/de.bsvrz.dav.daf.jar:../de.bsvrz.sys.funclib.commandLineArgs/de.bsvrz.sys.funclib.commandLineArgs.jar:../de.bsvrz.sys.funclib.communicationStreams/de.bsvrz.sys.funclib.communicationStreams.jar:../de.bsvrz.sys.funclib.configObjectAcquisition/de.bsvrz.sys.funclib.configObjectAcquisition.jar:../de.bsvrz.sys.funclib.dataSerializer/de.bsvrz.sys.funclib.dataSerializer.jar:../de.bsvrz.sys.funclib.debug/de.bsvrz.sys.funclib.debug.jar" />

    <property name="javadoc.sourcepath" value="../de.bsvrz.dav.daf/de.bsvrz.dav.daf-src:../de.bsvrz.sys.funclib.commandLineArgs/de.bsvrz.sys.funclib.commandLineArgs-src:../de.bsvrz.sys.funclib.communicationStreams/de.bsvrz.sys.funclib.communicationStreams-src:../de.bsvrz.sys.funclib.configObjectAcquisition/de.bsvrz.sys.funclib.configObjectAcquisition-src:../de.bsvrz.sys.funclib.dataSerializer/de.bsvrz.sys.funclib.dataSerializer-src:../de.bsvrz.sys.funclib.debug/de.bsvrz.sys.funclib.debug-src" />

    <property name="compile.jvm" value="1.8" />

    <property name="jar.manifest.classpath" value="de.bsvrz.pat.onlprot.jar ../de.bsvrz.dav.daf/de.bsvrz.dav.daf-runtime.jar ../de.bsvrz.sys.funclib.commandLineArgs/de.bsvrz.sys.funclib.commandLineArgs-runtime.jar ../de.bsvrz.sys.funclib.communicationStreams/de.bsvrz.sys.funclib.communicationStreams-runtime.jar ../de.bsvrz.sys.funclib.configObjectAcquisition/de.bsvrz.sys.funclib.configObjectAcquisition-runtime.jar ../de.bsvrz.sys.funclib.dataSerializer/de.bsvrz.sys.funclib.dataSerializer-runtime.jar ../de.bsvrz.sys.funclib.debug/de.bsvrz.sys.funclib.debug-runtime.jar " />

    <property name="junit-for-test-target" value="../../lib/junit/junit-4.12.jar" />

    <property environment="env" />

    <available property="source-available" file="${ant.project.name}-src" type="dir" />

    <condition property="pegdown.home" value="${env.PEGDOWN_HOME}">
        <isset property="env.PEGDOWN_HOME"/>
    </condition>
    
    <property name="pegdown.home" value="." />

    <available property="pegdown-available" file="${pegdown.home}/pegdown-doclet-1.3-all.jar" type="file" />

    <target name="debug" description="Variableninhalte ausgeben">
        <echoproperties />
    </target>

    <target name="clean" description="Generierte Zwischenergebnisse und Distributionsdateien lˆschen">

        <fail message="Achtung: Quellcode Verzeichnis ${ant.project.name}-src ist nicht verf¸gbar. Bitte vorher die Datei ${ant.project.name}-src.zip entpacken"
              unless="source-available" />
        
        <delete dir="tmp" />
        <delete dir="classes" />
        <delete dir="resources" />
        <delete dir="${ant.project.name}-doc-api" />
        <delete dir="${ant.project.name}-doc-design" />
        <delete file="${ant.project.name}-src.zip" />
        <delete file="${ant.project.name}.jar" />
        <delete file="${ant.project.name}-runtime.jar" />
        <delete file="${ant.project.name}-info.html" />
        <delete file="${ant.project.name}-doc-api.zip" />
        <delete file="${ant.project.name}-doc-design.zip" />
        <delete file="${ant.project.name}.zip" />
        <delete>
            <fileset dir="." includes="${ant.project.name}_*v*-????????-????.jar" />
            <fileset dir="." includes="${ant.project.name}.source_*v*-????????-????.jar" />
        </delete>

    </target>

    <target name="info" description="Erzeugen der info.xml Datei">
        <echoxml file="${ant.project.name}-info.xml">
            <package name="${ant.project.name}">
                <license name="${license.name}" />
                <release name="${release}" />
                <version number="${version}-${build.datetime}" />
                <revision number="${revision}" />
                <compile time="${compile.time}" />
                <depends-on-compiled packages="${depends.on.compiled.packages}" />
                <depends-on-source packages="" />
                <depends-on-lib jars="${depends.on.lib.jars}" />
                <jvm version="${compile.jvm}" />
            </package>
        </echoxml>
    </target>

    <target name="runtime-info" description="Erzeugen der PackageRuntimeInfo.java Datei">
        <echo file="${ant.project.name}.PackageRuntimeInfo.java">
            package ${ant.project.name};
            public class PackageRuntimeInfo {
            public static String getLicence() { return "${license.name}";}
            public static String getRelease() { return "${release}";}
            public static String getVersion() { return "${version}";}
            public static String getRevision() { return "${revision}";}
            public static String getCompileTime() { return "${compile.time}";}
            public static String getDependsOnCompiled() { return "${depends.on.compiled.packages}";}
            public static String getDependsOnSource() { return "";}
            public static String getDependsOnLib() { return "${depends.on.lib.jars}";}
            public static String getJvmVersion() { return "${compile.jvm}";}
            }
        </echo>
        <move todir="${ant.project.name}-src">
            <fileset dir=".">
                <include name="${ant.project.name}.PackageRuntimeInfo.java" />
            </fileset>
            <unpackagemapper from="*.java" to="*.java" />
        </move>
    </target>

    <target name="jar" description="Erzeugen einer JAR-Datei mit ¸bersetzten Class-Dateien und Resource-Dateien">

        <fail message="Achtung: Quellcode Verzeichnis ${ant.project.name}-src ist nicht verf¸gbar. Bitte vorher die Datei ${ant.project.name}-src.zip entpacken"
              unless="source-available" />
        
        <mkdir dir="tmp/classes" />
        <javac srcdir="${ant.project.name}-src"
               classpath="${compile.classpath}"
	       includeAntRuntime="false"
               destdir="tmp/classes"
               fork="true"
               encoding="UTF-8"
               debug="true"
               debuglevel="lines,source"
               target="${compile.jvm}"
               source="${compile.jvm}"
               verbose="no" />
        <mkdir dir="tmp/resources" />
        <sync todir="tmp/resources" includeEmptyDirs="false" verbose="true">
            <fileset dir="${ant.project.name}-src" casesensitive="false">
                <include name="**/*.properties" />
                <include name="**/*.xml" />
                <include name="**/*.gif" />
                <include name="**/*.png" />
                <include name="**/*.jpeg" />
                <include name="**/*.jpg" />
                <include name="**/*.html" />
                <include name="**/*.dtd" />
                <include name="**/*.tld" />
                <include name="**/*.config" />
                <include name="**/*.csv" />
                <include name="**/*.txt" />
                <include name="**/*.pua" />
                <include name="**/*.dat" />
                <include name="**/*.xsd" />
            </fileset>
        </sync>
        <jar destfile="${ant.project.name}.jar" basedir="tmp/classes" compress="false" includes="-/**,de/bsvrz/pat/onlprot/**" />
        <jar destfile="${ant.project.name}.jar" basedir="tmp/resources" compress="false" update="true" />
        <jar destfile="${ant.project.name}.jar" basedir="." compress="false" update="true">
            <include name="${ant.project.name}-lizenz.txt" />
        </jar>
        <jar destfile="${ant.project.name}-runtime.jar" basedir="tmp/classes" compress="false">
            <exclude name="**" />
            <manifest>
                <attribute name="Class-Path" value="${jar.manifest.classpath}" />
                
            </manifest>
        </jar>
        <delete dir="tmp/resources" />
        <delete dir="tmp/classes" />
    </target>

    <target name="docapizip" description="Erzeugt die Schnittstellenbeschreibung mit JavaDoc">

        <fail message="Achtung: Quellcode Verzeichnis ${ant.project.name}-src ist nicht verf¸gbar. Bitte vorher die Datei ${ant.project.name}-src.zip entpacken"
              unless="source-available" />
        
        <mkdir dir="${ant.project.name}-doc-api" />
        <fail unless="pegdown-available" message="Dokumentation kann nicht erzeugt werden, da `${pegdown.home}/pegdown-doclet-1.3-all.jar` nicht gefunden wurde. Bitte von `https://oss.sonatype.org/content/repositories/releases/ch/raffael/pegdown-doclet/pegdown-doclet/1.2.1/` herunterladen und ins aktuelle Verzeichnis kopieren oder Umgebungsvariable PEGDOWN_HOME setzen."/>
        <echo message="sourcepath=${ant.project.name}-src:${javadoc.sourcepath}:${env.JAVA_HOME}/src.zip:${env.JAVA_HOME}/src.jar" />
        <javadoc destdir="${ant.project.name}-doc-api"
                 sourcepath="${ant.project.name}-src:${javadoc.sourcepath}"
                 author="true"
                 version="false"
                 source="${compile.jvm}"
                 access="protected"
                 encoding="UTF-8"
                 docencoding="UTF-8"
                 charset="UTF-8"
                 classpath="${compile.classpath}"
                 doclet="ch.raffael.doclets.pegdown.PegdownDoclet"
                 docletpath="${pegdown.home}/pegdown-doclet-1.3-all.jar"
                 includenosourcepackages="true"
                 packagenames="-.*,de.bsvrz.pat.onlprot.*">
            <tag name="intern" enabled="false" />
            <tag name="redundant" enabled="false" />
            <tag name="verweis" enabled="false" />
            <link href="../../de.bsvrz.dav.daf/de.bsvrz.dav.daf-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.commandLineArgs/de.bsvrz.sys.funclib.commandLineArgs-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.communicationStreams/de.bsvrz.sys.funclib.communicationStreams-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.configObjectAcquisition/de.bsvrz.sys.funclib.configObjectAcquisition-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.dataSerializer/de.bsvrz.sys.funclib.dataSerializer-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.debug/de.bsvrz.sys.funclib.debug-doc-api/" />
            <link offline="true" packagelistloc="../j2se/${compile.jvm}/docs/api" href="http://download.oracle.com/javase/${compile.jvm}/docs/api/" />
        </javadoc>
        <zip destfile="${ant.project.name}-doc-api.zip" basedir="." includes="${ant.project.name}-doc-api/" encoding="UTF-8" />
    </target>

    <target name="docdesignzip" description="Erzeugt die interne Dokumentation mit JavaDoc">

        <fail message="Achtung: Quellcode Verzeichnis ${ant.project.name}-src ist nicht verf¸gbar. Bitte vorher die Datei ${ant.project.name}-src.zip entpacken"
              unless="source-available" />
        
        <mkdir dir="${ant.project.name}-doc-design" />
        <fail unless="pegdown-available" message="Dokumentation kann nicht erzeugt werden, da `${pegdown.home}/pegdown-doclet-1.3-all.jar` nicht gefunden wurde. Bitte von `https://oss.sonatype.org/content/repositories/releases/ch/raffael/pegdown-doclet/pegdown-doclet/1.2.1/` herunterladen und ins aktuelle Verzeichnis kopieren oder Umgebungsvariable PEGDOWN_HOME setzen."/>
        <echo message="sourcepath=${ant.project.name}-src:${javadoc.sourcepath}:${env.JAVA_HOME}/src.zip:${env.JAVA_HOME}/src.jar" />
        <echo message="javadoc.sourcepath=${javadoc.sourcepath}" />
        <javadoc destdir="${ant.project.name}-doc-design"
                 sourcepath="${ant.project.name}-src:${javadoc.sourcepath}"
                 author="true"
                 version="false"
                 source="${compile.jvm}"
                 access="private"
                 encoding="UTF-8"
                 docencoding="UTF-8"
                 charset="UTF-8"
                 classpath="${compile.classpath}"
                 doclet="ch.raffael.doclets.pegdown.PegdownDoclet"
                 docletpath="${pegdown.home}/pegdown-doclet-1.3-all.jar"
                 includenosourcepackages="true"
                 packagenames="-.*,de.bsvrz.pat.onlprot.*">
            <tag name="intern" enabled="false" />
            <tag name="redundant" enabled="false" />
            <tag name="verweis" enabled="false" />
            <link href="../../de.bsvrz.dav.daf/de.bsvrz.dav.daf-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.commandLineArgs/de.bsvrz.sys.funclib.commandLineArgs-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.communicationStreams/de.bsvrz.sys.funclib.communicationStreams-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.configObjectAcquisition/de.bsvrz.sys.funclib.configObjectAcquisition-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.dataSerializer/de.bsvrz.sys.funclib.dataSerializer-doc-api/" />
			<link href="../../de.bsvrz.sys.funclib.debug/de.bsvrz.sys.funclib.debug-doc-api/" />
            <link offline="true" packagelistloc="../j2se/${compile.jvm}/docs/api" href="http://download.oracle.com/javase/${compile.jvm}/docs/api/" />
        </javadoc>
        <zip destfile="${ant.project.name}-doc-design.zip" basedir="." includes="${ant.project.name}-doc-design/" encoding="UTF-8" />
    </target>

    <target name="srczip" description="Erzeugt eine Zip-Datei mit den Quelldateien">

        <fail message="Quellcode Verzeichnis ${ant.project.name}-src ist nicht verf¸gbar."
              unless="source-available" />
        
        <zip destfile="${ant.project.name}-src.zip" encoding="UTF-8">
            <zipfileset dir="." includes="${ant.project.name}-src/" />
            <zipfileset dir="." includes="${ant.project.name}-lizenz.txt" prefix="${ant.project.name}-src" />
        </zip>
    </target>

    <target name="zip"
            depends="clean, info, runtime-info, jar, docapizip, docdesignzip, srczip"
            description="Zip-Datei mit allen Distributionsdateien erzeugen">
        <zip destfile="${ant.project.name}.zip" basedir=".." encoding="UTF-8">
            <include name="${ant.project.name}/build.xml" />
            <include name="${ant.project.name}/${ant.project.name}-src.zip" />
            <include name="${ant.project.name}/${ant.project.name}.jar" />
            <include name="${ant.project.name}/${ant.project.name}-runtime.jar" />
            <include name="${ant.project.name}/${ant.project.name}-info.xml" />
            <include name="${ant.project.name}/${ant.project.name}-doc-api.zip" />
            <include name="${ant.project.name}/${ant.project.name}-doc-design.zip" />
            <include name="${ant.project.name}/${ant.project.name}-lizenz.txt" />
            <include name="${ant.project.name}/${ant.project.name}-notes.html" />
            <include name="${ant.project.name}/lib/**" />
            <include name="${ant.project.name}/*.pdf" />
        </zip>
    </target>

    <target name="test" description="Alle Tests ausf¸hren">

        <delete dir="testergebnisse" quiet="true" />
        <mkdir dir="testergebnisse" />
        <junit fork="yes"
               maxmemory="1000m"
               dir="testergebnisse"
               showoutput="yes"
               printsummary="on"
               haltonerror="off"
               errorproperty="junitErrors"
               failureproperty="junitFailures">
            <jvmarg value="-Dfile.encoding=ISO-8859-1" />
            <classpath path="${ant.project.name}-runtime.jar:${junit-for-test-target}"/>
            <formatter type="plain" usefile="true" />
            <batchtest todir="testergebnisse" skipNonTests="on">
                <zipfileset src="${ant.project.name}.jar">
                    <include name="**/Test*.class" />
                    <exclude name="**/TestSuite*.class" />
                </zipfileset>
            </batchtest>
        </junit>

        <!--
        <fail if="junitErrors" message="Unerwartete Fehler beim Ausf¸hren von bestimmten Tests" />
        <fail if="junitFailures" message="Einzelne Tests sind fehlgeschlagen" />
        -->
    </target>

    <target name="ziptest" depends="zip, test" description="Distributionspaket erzeugen und alle Tests ausf¸hren"></target>
</project>

